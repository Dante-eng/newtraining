CREATE TABLE Item (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    price REAL NOT NULL,
    type TEXT NOT NULL,
    sellPrice REAL
);

CREATE TABLE Player (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    uniqueId TEXT NOT NULL,
    fullName TEXT NOT NULL,
    age INTEGER NOT NULL,
    height INTEGER NOT NULL,
    gender TEXT NOT NULL,
    medicalCondition TEXT NOT NULL,
    pictureUri TEXT
);

CREATE TABLE Sale (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    itemId INTEGER NOT NULL,
    playerId INTEGER NOT NULL,
    price REAL NOT NULL,
    discount REAL NOT NULL DEFAULT 0.0,
    paid REAL NOT NULL DEFAULT 0.0,
    debt REAL NOT NULL DEFAULT 0.0,
    date INTEGER NOT NULL,
    FOREIGN KEY(itemId) REFERENCES Item(id),
    FOREIGN KEY(playerId) REFERENCES Player(id)
);

-- Select all sales
selectAll:
SELECT * FROM Sale;

-- Select sale by ID
selectById:
SELECT * FROM Sale WHERE id = ?;

-- Select sales by player ID
selectByPlayerId:
SELECT * FROM Sale WHERE playerId = ?;

-- Insert a sale
insertSale:
INSERT INTO Sale (itemId, playerId, price, discount, paid, debt, date)
VALUES (?, ?, ?, ?, ?, ?, ?);

-- Update a sale
updateSale:
UPDATE Sale SET itemId = ?, playerId = ?, price = ?, discount = ?, paid = ?, debt = ?, date = ?
WHERE id = ?;

-- Delete a sale by ID
deleteById:
DELETE FROM Sale WHERE id = ?;

-- Get last inserted row ID (for SQLite)
lastInsertRowId:
SELECT last_insert_rowid(); 